package com.idea.memories.Views.Fragments;import android.os.Bundle;import com.idea.memories.Adapters.MemoriesAdapter;import androidx.fragment.app.Fragment;import androidx.recyclerview.widget.GridLayoutManager;import androidx.recyclerview.widget.RecyclerView;import android.text.Editable;import android.text.TextWatcher;import android.view.KeyEvent;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.view.inputmethod.InputMethodManager;import android.widget.EditText;import android.widget.TextView;import com.idea.memories.R;import com.idea.memories.Classes.MemoriesGenerator;public class SearchFragment extends Fragment {    public EditText search_bar;    ViewGroup backdrop;    public MemoriesAdapter memoriesAdapter;    public RecyclerView recyclerView;    private View.OnClickListener onClickListener;    private RecyclerView.OnScrollListener onScrollListener;    @Override    public View onCreateView(LayoutInflater inflater, ViewGroup container,                             Bundle savedInstanceState) {        final View root = inflater.inflate(R.layout.fragment_search, container, false);        backdrop = root.findViewById(R.id.backdrop);        recyclerView = root.findViewById(R.id.recycler_view);        recyclerView.setOnScrollListener(onScrollListener);        recyclerView.setHasFixedSize(false);//        recyclerView.setItemAnimator(null);        GridLayoutManager mLayoutManager = new GridLayoutManager(getContext() , 2);        recyclerView.setLayoutManager(mLayoutManager);        final MemoriesGenerator memoriesGenerator = new MemoriesGenerator(getContext());        memoriesAdapter = new MemoriesAdapter(getContext() , getActivity() , memoriesGenerator.search(null ,  0) , 0 , onClickListener);        recyclerView.setAdapter(memoriesAdapter);        search_bar = root.findViewById(R.id.search_bar);        search_bar.addTextChangedListener(new TextWatcher() {            @Override            public void beforeTextChanged(CharSequence s, int start, int count, int after) {            }            @Override            public void onTextChanged(CharSequence s, int start, int before, int count) {                memoriesAdapter.memories.clear();                if(!s.toString().trim().isEmpty()) {                    memoriesAdapter.memories = memoriesGenerator.search(s.toString() , 0);                    memoriesAdapter.setSearchKey(s.toString());                    memoriesAdapter.notifyDataSetChanged();                }            }            @Override            public void afterTextChanged(Editable s) {            }        });        search_bar.setOnEditorActionListener(new TextView.OnEditorActionListener() {            @Override            public boolean onEditorAction(TextView v, int actionId, KeyEvent event) {                InputMethodManager imm = (InputMethodManager) getContext().getSystemService(getContext().INPUT_METHOD_SERVICE);                try {                    imm.hideSoftInputFromWindow(getActivity().getCurrentFocus().getWindowToken(), 0);                }catch (Exception e){}                return true;            }        });        return root;    }    public void setOnClickListener(View.OnClickListener onClickListener) {        this.onClickListener = onClickListener;    }    public void setOnScrollListener(RecyclerView.OnScrollListener onScrollListener) {        this.onScrollListener = onScrollListener;    }}